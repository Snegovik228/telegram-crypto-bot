# - *- coding: utf- 8 - *-
from datetime import date

import requests
from aiogram import types

from keyboard.default.menu_reply import kb_settings, kb_settings_eng, kb_menu, kb_menu_eng, kb_crypto, kb_crypto_eng, \
    lang_rus
from keyboard.inline import ikb_menu
from keyboard.inline.inline_kb_menu import ikb_menu_eng
from loader import dp
from utils.misc_functions import get_course


# –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≤ USD
@dp.message_handler(text='üíµ USD')
async def rate_crypto_usd(message: types.Message):
    del_loading = await message.reply('‚ôª –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å')

    await message.answer_photo(requests.get("https://imageup.ru/img64/4170277/rubli.jpg").content,
                               f"‚úÖ –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –Ω–∞:\n {date.today()}\n\n"
                               "<b>–í–∞–ª—é—Ç–∞: USD\n\n"
                               f"üî∏ BTC  =  <code>{await get_course('BTC', 'USD')}$</code>\n"
                               f"üî∏ ETH  =  <code>{await get_course('ETH', 'USD')}$</code>\n"
                               f"üî∏ BNB  =  <code>{await get_course('BNB', 'USD')}$</code>\n"
                               f"üî∏ DOGE  =  <code>{await get_course('DOGE', 'USD')}$</code>\n"
                               f"üî∏ LTC  =  <code>{await get_course('LTC', 'USD')}$</code>\n"
                               f"üî∏ DASH  =  <code>{await get_course('DASH', 'USD')}$</code>\n"
                               f"üî∏ XMR  =  <code>{await get_course('XMR', 'USD')}$</code>\n"
                               f"üî∏ RVN  =  <code>{await get_course('RVN', 'USD')}$</code>\n"
                               f"üî∏ TON  =  <code>{await get_course('TONCOIN', 'USD')}$</code></b>\n")

    await del_loading.delete()


# –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≤ RUB
@dp.message_handler(text='ü™ô RUB')
async def rate_crypto_rub(message: types.Message):
    del_loading = await message.reply('‚ôª –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å')

    await message.answer_photo(requests.get("https://imageup.ru/img228/4170278/dollary.jpg").content,
                               f"‚úÖ –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –Ω–∞:\n {date.today()}\n\n"
                               "<b>–í–∞–ª—é—Ç–∞: RUB\n\n"
                               f"üî∏ BTC  =  <code>{await get_course('BTC', 'RUB')}‚ÇΩ</code>\n"
                               f"üî∏ ETH  =  <code>{await get_course('ETH', 'RUB')}‚ÇΩ</code>\n"
                               f"üî∏ BNB  =  <code>{await get_course('BNB', 'RUB')}‚ÇΩ</code>\n"
                               f"üî∏ DOGE  =  <code>{await get_course('DOGE', 'RUB')}‚ÇΩ</code>\n"
                               f"üî∏ LTC  =  <code>{await get_course('LTC', 'RUB')}‚ÇΩ</code>\n"
                               f"üî∏ DASH  =  <code>{await get_course('DASH', 'RUB')}‚ÇΩ</code>\n"
                               f"üî∏ XMR  =  <code>{await get_course('XMR', 'RUB')}‚ÇΩ</code>\n"
                               f"üî∏ RVN  =  <code>{await get_course('RVN', 'RUB')}‚ÇΩ</code>\n"
                               f"üî∏ TON  =  <code>{await get_course('TONCOIN', 'RUB')}‚ÇΩ</code></b>\n")

    await del_loading.delete()


# –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≤ EUR
@dp.message_handler(text='üí∂ EUR')
async def rate_crypto_eur(message: types.Message):
    del_loading = await message.reply('‚ôª –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å')

    await message.answer_photo(requests.get("https://imageup.ru/img194/4170279/evro.jpg").content,
                               f"‚úÖ –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –Ω–∞:\n {date.today()}\n\n"
                               "<b>–í–∞–ª—é—Ç–∞: EUR\n\n"
                               f"üî∏ BTC  =  <code>{await get_course('BTC', 'EUR')}‚Ç¨</code>\n"
                               f"üî∏ ETH  =  <code>{await get_course('ETH', 'EUR')}‚Ç¨</code>\n"
                               f"üî∏ BNB  =  <code>{await get_course('BNB', 'EUR')}‚Ç¨</code>\n"
                               f"üî∏ DOGE  =  <code>{await get_course('DOGE', 'EUR')}‚Ç¨</code>\n"
                               f"üî∏ LTC  =  <code>{await get_course('LTC', 'EUR')}‚Ç¨</code>\n"
                               f"üî∏ DASH  =  <code>{await get_course('DASH', 'EUR')}‚Ç¨</code>\n"
                               f"üî∏ XMR  =  <code>{await get_course('XMR', 'EUR')}‚Ç¨</code>\n"
                               f"üî∏ RVN  =  <code>{await get_course('RVN', 'EUR')}‚Ç¨</code>\n"
                               f"üî∏ TON  =  <code>{await get_course('TONCOIN', 'EUR')}‚Ç¨</code></b>\n")

    await del_loading.delete()


# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞ –Ω–∞–∑–∞–¥
@dp.message_handler(text=['üîô –ù–∞–∑–∞–¥', 'üîô Back'])
async def command_back(message: types.Message):
    if message.text == 'üîô –ù–∞–∑–∞–¥':
        await message.answer('–ü–µ—Ä–µ—Ö–æ–¥–∏–º', reply_markup=kb_crypto)
    else:
        await message.answer('Loading', reply_markup=kb_crypto_eng)


# –ö–Ω–æ–ø–∫–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
@dp.message_handler(text=['üì± –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä', 'üì± Calculator'])
async def command_calculator(message: types.Message):
    if message.text == 'üì± –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä':
        await message.answer('üëá –í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏', reply_markup=ikb_menu)
    else:
        await message.answer('üëá Select conversion method', reply_markup=ikb_menu_eng)


# –ö–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
@dp.message_handler(text=['‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏', '‚öô Settings'])
async def command_settings(message: types.Message):
    if message.text == '‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏':
        await message.answer('–ü–µ—Ä–µ—Ö–æ–¥–∏–º', reply_markup=kb_settings)
    else:
        await message.answer('Loading', reply_markup=kb_settings_eng)


# –ö–Ω–æ–ø–∫–∞ –æ —Å–µ—Ä–≤–∏—Å–µ
@dp.message_handler(text=['‚ö† –û —Å–µ—Ä–≤–∏—Å–µ', '‚ö† About'])
async def command_about(message: types.Message):
    if message.text == '‚ö† –û —Å–µ—Ä–≤–∏—Å–µ':
        await message.answer('<b>ConvertCrypto - —Å–µ—Ä–≤–∏—Å —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –∫—É—Ä—Å–∞–º–∏.\n\n'
                             '–£–∑–Ω–∞—Ç—å —Ü–µ–Ω—É –∫—É—Ä—Å–∞ –º–æ–∂–Ω–æ –≤ 2 –∫–ª–∏–∫–∞\n\n'
                             '–î–µ–ª–∞—Ç—å —Ç–æ—á–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã —Å—Ç–∞–ª–æ –ø—Ä–æ—â–µ, –±–ª–∞–≥–æ–¥–∞—Ä—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—É.\n\n'
                             '–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –Ω–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª –∏ –ø–æ–ª—É—á–∞–π —Å–≤–µ–∂–∏–µ —Å–∏–≥–Ω–∞–ª—ã</b>\n\n'
                             '<a href="t.me/convertinfo"><b>–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è</b></a>')
    else:
        await message.answer('<b>ConvertCrypto is a service with up-to-date rates.\n\n'
                             'You can find out the cost of the course in 2 clicks\n\n'
                             'Making accurate calculations has become easier thanks to the calculator.\n\n'
                             'Subscribe to our telegram channel and get fresh signals</b>\n\n'
                             '<a href="t.me/convertinfo"><b>Subscribe</b></a>')


# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞
@dp.message_handler(text=['üí≠ –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫', 'üí≠ Change the language'])
async def select_language(message: types.Message):
    if message.text == 'üí≠ –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫':
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π —è–∑—ã–∫', reply_markup=lang_rus)
    else:
        await message.answer('Choose the required language', reply_markup=lang_rus)


# –ö–Ω–æ–ø–∫–∞ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å
@dp.message_handler(text=['üìù –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'üìù Ask a Question'])
async def ask_question(message: types.Message):
    if message.text == 'üìù –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å':
        await message.answer("<b>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞</b>\n\n"
                             f"–ï—Å–ª–∏ —É –í–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏, "
                             f"–ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º, –±—É–¥–µ–º —Ä–∞–¥—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.\n\n"
                             f'<a href="t.me/snegdev">–°–≤—è–∑–∞—Ç—å—Å—è</a>', disable_web_page_preview=True)
    else:
        await message.answer("<b>Thank you for choosing our bot</b>\n\n"
                             f"If you have any questions or technical difficulties, "
                             f"when working with the bot, we will be glad to receive feedback.\n\n"
                             f'<a href="t.me/snegdev">Contact</a>', disable_web_page_preview=True)


# –í—ã–±–æ—Ä —è–∑—ã–∫–∞
@dp.message_handler(text=['üá∑üá∫ –†—É—Å—Å–∫–∏–π', 'üá∫üá∏ English'])
async def select_language(message: types.Message):
    if message.text == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
        await message.answer("<b>–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ —è–∑—ã–∫!</b>", reply_markup=kb_crypto)
    else:
        await message.answer("<b>You have successfully changed the language!</b>", reply_markup=kb_crypto_eng)


# –ö–Ω–æ–ø–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å
@dp.message_handler(text=['üìà –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å', 'üìà –°urrent exchange rate'])
async def actual_rate(message: types.Message):
    if message.text == 'üìà –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å':
        await message.answer('üëá –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–∞—Ç–Ω—É—é –≤–∞–ª—é—Ç—É', reply_markup=kb_menu)
    else:
        await message.answer('üëá Choose a fiat currency', reply_markup=kb_menu_eng)
